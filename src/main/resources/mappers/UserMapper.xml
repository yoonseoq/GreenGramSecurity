<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.greengramver3.user.UserMapper">
    <insert id="insUser" useGeneratedKeys="true" keyProperty="userId"> <!--keyProperty="userId" 이거때문에 멤버필드 만듦-->
        insert into user
        set uid = #{uid},
        upw = #{upw},
        nick_name = #{nickName},
        pic = #{pic}
    </insert>
    <select id="selUserByUid">
        select user_id as userId
        , ifnull(nick_name,uid) as nickName
        , pic, upw
        from user
        where uid = #{uid}
    </select>
    <select id="selUserInfo">
        SELECT A.user_id, A.pic, A.created_at AS createdAt
        , IF(nick_name IS NULL, uid, nick_name) AS nickName
        , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
        , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
        , IFNULL(D.feedCnt, 0) AS feedCnt
        , IFNULL(D.likeCnt, 0) AS likeCnt
        , SUM(DISTINCT if(B.from_user_id = #{signedUserId}, 1, 0))
        + SUM(DISTINCT if(C.to_user_id = #{signedUserId}, 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
        SELECT H.writer_user_id
        , COUNT(DISTINCT H.feed_id) AS feedCnt
        , COUNT(I.user_id) AS likeCnt
        FROM feed H
        LEFT JOIN feed_like I
        ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = #{profileUserId}
        ) D
        ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
        ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
        ON A.user_id = C.from_user_id
        WHERE A.user_id = #{profileUserId};
    </select>
</mapper>