<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.greengram.feed.FeedMapper">
    <insert id="insFeed" useGeneratedKeys="true" keyProperty="feedId">
        insert into feed
            set writer_user_id = #{writerUserId},
                contents = #{contents},
                location = #{location}
    </insert>

    <select id="selFeedList">
        SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        , D.pic
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = #{signedUserId}
        <if test=" profileUserId != null ">
            WHERE A.writer_user_id = #{profileUserId}
        </if>
        ORDER BY A.feed_id DESC
        LIMIT #{startIdx}, #{size}
    </select>

    <select id="selFeedListWithPic">
        SELECT feed.feed_id AS feedId, feed.contents, feed.location
        , feed.created_at AS createdAt
        , writer_user_id AS writerUserId
        , if(user.nick_name IS NULL , uid, nick_name) AS writerNm
        , pic AS writerPic
        , IF(feed_like.feed_id IS NULL,0,1) as isLike
        , feed_pic.pic
        FROM feed
        INNER JOIN  user
        ON feed.writer_user_id=user.user_id
        LEFT JOIN feed_like
        ON feed_like.feed_id=feed.feed_id
        AND feed_like.user_id=#{signedUserId}
        <if test="profileUserId != null">
            where writer_user_id = #{profileUserId}
        </if>
        inner JOIN feed_pic
        ON feed.feed_id=feed_pic.feed_id
        ORDER BY FEED.feed_id DESC
        LIMIT #{sIdx}, #{size}
    </select>

    <resultMap id="feedResultMap" type="com.green.greengram.feed.model.FeedPicCommentDto">
        <id property="feedId" column="feedId"/>
        <result property="contents" column="contents" />
        <result property="location" column="location" />
        <result property="createdAt" column="createdAt" />
        <result property="writerUserId" column="writerUserId" />
        <result property="writerNm" column="writerNm" />
        <result property="writerPic" column="writerPic" />
        <result property="isLike" column="isLike" />
        <collection property="pics" resultMap="feedPicResultMap"/> <!--사진 모음짐-->
        <collection property="commentList" resultMap="feedCommentResultMap"/><!--댓글 모음짐-->
    </resultMap>

    <resultMap id="feedPicResultMap" type="String">
        <result property="pic" column="pic"/>
    </resultMap>

    <resultMap id="feedCommentResultMap" type="com.green.greengram.feed.comment.model.FeedCommentDto">
        <id property="feedCommentId" column="feed_comment_id" />
        <result property="comment" column="comment"/>
        <result property="writerUserId" column="commentWriterUserId"/>
        <result property="writerUserId" column="commentWriterUserId"/>
        <result property="writerNm" column="commentWriterNm"/>
        <result property="writerPic" column="commentWriterPic"/>
    </resultMap>

    <select id="selFeedWithPicAndCommentList" resultMap="feedResultMap">
        SELECT
        from (
            SELECT A.feed_id AS feedId, A.contents, A.location
            , A.created_at AS createdAt
            , B.user_id AS writerUserId
            , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
            , B.pic AS writerPic
            , IF(C.feed_id IS NULL, 0, 1) AS isLike
            , D.pic
            FROM feed A
            INNER JOIN user B
            ON A.writer_user_id = B.user_id
            LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
            AND C.user_id = #{signedUserId}
            <if test=" profileUserId != null ">
                WHERE A.writer_user_id = #{profileUserId}
            </if>
            ORDER BY A.feed_id DESC
            LIMIT #{startIdx}, #{size}
        )

    </select>
    <!--

    <delete id="delFeed">
        delete from feed
    </delete>

        -->
    <delete id="delFeedLikeAndFeedCommentAndFeedPic">
        delete
        from feed a
        left join feed_like b
        on a.feed_id = b.feed_id
        left join feed_comment c
        on a.feed_id = c.feed_id
        left join feed_pic d
        on a.feed_id = d.feed_id
        where a.feed_id = #{feedId}
        and a.writer_user_id = #{signedUserId}
    </delete>
    <delete id="delFeed">
        delete from feed
        where feed_id = #{feedId}
        and writer_user_id = #{signedUserId}
    </delete>



</mapper>